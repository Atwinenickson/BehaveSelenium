{"name": "UPDATE posts example", "status": "broken", "statusDetails": {"message": "KeyError: 'PUT.'\n", "trace": "  File \"/home/nickson/.local/lib/python3.8/site-packages/behave/model.py\", line 1329, in run\n    match.run(runner.context)\n  File \"/home/nickson/.local/lib/python3.8/site-packages/behave/matchers.py\", line 98, in run\n    self.func(context, *args, **kwargs)\n  File \"Features/steps/APISteps.py\", line 69, in step_impl\n    print('Get rep code for '+request_name+':'+ str(response_codes[request_name]))\n"}, "steps": [{"name": "Given I set sample REST API url", "status": "passed", "start": 1661346159412, "stop": 1661346159412}, {"name": "Given I Set PUT posts api endpoint for \"1\"", "status": "passed", "start": 1661346159412, "stop": 1661346159412}, {"name": "When I Set Update request Body", "status": "passed", "start": 1661346159412, "stop": 1661346159412}, {"name": "And Send PUT HTTP request", "status": "passed", "start": 1661346159412, "stop": 1661346159963}, {"name": "Then I receive valid HTTP response code 200 for \"PUT.\"", "status": "broken", "statusDetails": {"message": "KeyError: 'PUT.'\n", "trace": "  File \"/home/nickson/.local/lib/python3.8/site-packages/behave/model.py\", line 1329, in run\n    match.run(runner.context)\n  File \"/home/nickson/.local/lib/python3.8/site-packages/behave/matchers.py\", line 98, in run\n    self.func(context, *args, **kwargs)\n  File \"Features/steps/APISteps.py\", line 69, in step_impl\n    print('Get rep code for '+request_name+':'+ str(response_codes[request_name]))\n"}, "start": 1661346159963, "stop": 1661346159974}, {"name": "And Response BODY \"PUT\" is non-empty", "status": "skipped", "start": 1661346159977, "stop": 1661346159978}], "start": 1661346159411, "stop": 1661346159978, "uuid": "964c026b-24f6-47dc-a6e1-7811e114baa3", "historyId": "297e1b4893437e127a9361eb85746ce8", "fullName": "Test CRUD methods in Sample REST API testing framework: UPDATE posts example", "labels": [{"name": "severity", "value": "normal"}, {"name": "feature", "value": "Test CRUD methods in Sample REST API testing framework"}, {"name": "framework", "value": "behave"}, {"name": "language", "value": "cpython3"}]}